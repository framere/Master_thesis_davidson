Running for Nlow = 16

Using MINRES solver:
read ../Davidson_algorithm/m_pp_He.dat
Davidson with MINRES solver
iter=     1  Rnorm=  1.760e+00  size(V,2)=    16
iter=     2  Rnorm=  2.439e+00  size(V,2)=    32
iter=     3  Rnorm=  3.916e+00  size(V,2)=    48
iter=     4  Rnorm=  1.586e+00  size(V,2)=    64
iter=     5  Rnorm=  2.592e+00  size(V,2)=    80
iter=     6  Rnorm=  2.084e-01  size(V,2)=    96
iter=     7  Rnorm=  4.017e-05  size(V,2)=   112
converged!
 58.957768 seconds (32.51 k allocations: 171.697 GiB, 12.07% gc time, 0.01% compilation time)
Full diagonalization
1×16 adjoint(::Vector{Float64}) with eltype Float64:
 -6.13707  -5.13362  -5.12402  -5.11503  -4.34701  -4.3468  -4.34264  -4.3083  -4.1501  -0.991389  -0.985088  -0.97903  -0.761233  -0.643186  -0.642088  -0.639968
1×16 adjoint(::Vector{Float64}) with eltype Float64:
 1.77636e-15  9.76996e-15  5.32907e-15  3.55271e-15  1.4917e-11  -8.88178e-16  5.42677e-13  3.14682e-10  5.32907e-14  -2.44249e-15  2.44249e-15  1.9984e-15  3.44169e-15  6.48626e-12  3.92385e-10  1.25377e-12
Running for Nlow = 30

Using MINRES solver:
read ../Davidson_algorithm/m_pp_He.dat
Davidson with MINRES solver
iter=     1  Rnorm=  2.749e+00  size(V,2)=    30
iter=     2  Rnorm=  3.904e+00  size(V,2)=    60
iter=     3  Rnorm=  2.041e+00  size(V,2)=    90
iter=     4  Rnorm=  3.157e+00  size(V,2)=   120
iter=     5  Rnorm=  4.508e-01  size(V,2)=   150
iter=     6  Rnorm=  8.025e-03  size(V,2)=   180
converged!
206.861576 seconds (100.12 k allocations: 608.053 GiB, 10.04% gc time)
Full diagonalization
1×30 adjoint(::Vector{Float64}) with eltype Float64:
 -6.13707  -5.13362  -5.12402  -5.11503  -4.34701  -4.3468  -4.34264  -4.3083  -4.1501  -0.991389  -0.985088  -0.97903  -0.761233  -0.643186  -0.642088  -0.639968  -0.638299  -0.63581  -0.634052  -0.633173  -0.451494  -0.448879  -0.448599  -0.447421  -0.44405  -0.279619  -0.27717  -0.276449  -0.275247  -0.274905
1×30 adjoint(::Vector{Float64}) with eltype Float64:
 -7.10543e-15  6.21725e-15  5.32907e-15  7.10543e-15  5.82734e-11  7.90479e-14  1.49036e-12  1.53744e-12  0.0  -2.22045e-15  4.44089e-16  6.66134e-16  -7.77156e-16  2.19735e-8  1.87304e-7  1.93299e-9  2.27275e-10  9.46676e-12  4.23489e-6  1.1107e-9  1.60342e-11  2.71807e-10  3.16184e-11  3.58563e-12  5.60336e-11  1.10026e-6  0.000186044  5.36619e-5  1.1891e-5  4.24537e-5
Running for Nlow = 60

Using MINRES solver:
read ../Davidson_algorithm/m_pp_He.dat
Davidson with MINRES solver
iter=     1  Rnorm=  3.599e+00  size(V,2)=    60
iter=     2  Rnorm=  3.798e+00  size(V,2)=   120
iter=     3  Rnorm=  2.158e+00  size(V,2)=   180
iter=     4  Rnorm=  1.552e+00  size(V,2)=   240
iter=     5  Rnorm=  6.760e-02  size(V,2)=   300
iter=     6  Rnorm=  2.599e-05  size(V,2)=   360
converged!
551.194152 seconds (259.51 k allocations: 1.586 TiB, 10.11% gc time)
Full diagonalization
1×60 adjoint(::Vector{Float64}) with eltype Float64:
 -6.13707  -5.13362  -5.12402  -5.11503  -4.34701  -4.3468  -4.34264  -4.3083  -4.1501  -0.991389  -0.985088  -0.97903  -0.761233  -0.643186  -0.642088  -0.639968  -0.638299  -0.63581  -0.634056  -0.633173  -0.451494  -0.448879  -0.448599  -0.447421  -0.44405  -0.27962  -0.277356  -0.276502  -0.275259  -0.274948  -0.274906  -0.27213  -0.272045  -0.271784  -0.171543  -0.16928  -0.167529  -0.129366  -0.127231  -0.127088  -0.126952  -0.126268  -0.124999  -0.124875  -0.12477  -0.12368  -0.123345  -0.123304  -0.12307  -0.122988  -0.122626  -0.122336  -0.12175  -0.121628  -0.121584  -0.109959  -0.0688216  -0.0673767  -0.0671764  -0.0669604
1×60 adjoint(::Vector{Float64}) with eltype Float64:
 8.88178e-15  1.15463e-14  5.32907e-15  -3.55271e-15  4.44089e-15  8.88178e-16  -1.24345e-14  2.66454e-15  8.88178e-15  -1.9984e-15  -4.44089e-16  -8.88178e-16  -3.33067e-16  7.77156e-16  1.53114e-11  8.88178e-16  4.66294e-15  1.33227e-15  1.44329e-15  -3.33067e-16  0.0  -4.996e-16  -3.88578e-16  -5.55112e-17  -1.66533e-16  6.64746e-13  1.42214e-11  7.26826e-10  3.46517e-12  3.60468e-10  6.88079e-10  3.14068e-10  2.30407e-10  1.64896e-12  3.38618e-15  1.46827e-14  3.52496e-15  2.08464e-12  7.88528e-12  5.20478e-12  7.38163e-11  6.26571e-12  4.00482e-12  7.5514e-12  5.23165e-11  2.5146e-11  8.64545e-13  3.93487e-12  2.98151e-11  1.65195e-11  1.90617e-12  5.18723e-12  2.42852e-12  1.43957e-11  3.48659e-12  1.57374e-14  7.18869e-15  7.60225e-14  1.56819e-15  7.21645e-15
Running for Nlow = 90

Using MINRES solver:
read ../Davidson_algorithm/m_pp_He.dat
Davidson with MINRES solver
iter=     1  Rnorm=  4.039e+00  size(V,2)=    90
iter=     2  Rnorm=  4.196e+00  size(V,2)=   180
iter=     3  Rnorm=  3.451e+00  size(V,2)=   270
iter=     4  Rnorm=  3.462e-01  size(V,2)=   360
iter=     5  Rnorm=  2.575e-03  size(V,2)=   450
converged!
981.204837 seconds (449.40 k allocations: 2.824 TiB, 10.73% gc time)
Full diagonalization
1×90 adjoint(::Vector{Float64}) with eltype Float64:
 -6.13707  -5.13362  -5.12402  -5.11503  -4.34701  -4.3468  -4.34264  -4.3083  -4.1501  -0.991389  -0.985088  -0.97903  -0.761233  -0.643186  -0.642088  -0.639968  -0.638299  -0.63581  -0.634056  -0.633173  -0.451494  -0.448879  -0.448599  -0.447421  -0.44405  -0.27962  -0.277356  -0.276497  -0.275259  -0.274947  -0.274904  -0.27213  -0.272045  -0.271784  -0.171543  -0.16928  -0.167529  -0.129366  -0.127231  -0.127087  -0.126952  -0.126268  -0.124999  -0.124875  -0.12477  -0.12368  -0.123345  -0.123303  -0.123069  -0.122988  -0.122626  -0.122336  -0.12175  -0.121627  -0.121584  -0.109959  -0.0688216  -0.0673767  -0.0671764  -0.0669604  -0.066882  -0.0605294  -0.0595295  -0.0590256  -0.0589636  -0.0587142  -0.0583626  -0.0582421  -0.0579631  -0.0579432  -0.0575668  -0.0572607  -0.0569982  -0.0565338  -0.0516872  -0.0509329  -0.0506476  -0.050283  -0.0502145  -0.0502068  -0.0494391  -0.0493955  -0.0493628  -0.0297596  -0.0293302  -0.0289728  -0.0284529  -0.0284087  -0.0283611  -0.0282742
1×90 adjoint(::Vector{Float64}) with eltype Float64:
 -1.77636e-15  -1.77636e-15  -6.21725e-15  -8.88178e-16  7.10543e-15  -6.21725e-15  -9.76996e-15  7.4607e-14  8.88178e-16  -3.33067e-16  -7.77156e-16  -3.33067e-16  -5.55112e-16  6.20447e-11  7.4686e-10  5.30065e-11  6.65849e-10  7.28932e-11  2.13584e-10  6.75537e-10  4.03011e-14  1.8674e-13  1.59784e-11  9.49241e-13  1.27676e-15  3.82296e-10  6.46548e-8  5.44755e-6  3.41343e-10  9.32234e-7  2.34808e-6  1.69161e-7  7.19263e-7  5.117e-10  4.01222e-11  4.02798e-11  5.95023e-11  1.66401e-8  2.31431e-7  1.63499e-7  5.40116e-7  8.21562e-8  2.36372e-8  6.66724e-8  3.11946e-8  9.09733e-8  6.67872e-8  2.33106e-7  5.75895e-7  1.55096e-7  5.33747e-8  6.50448e-8  2.58497e-7  1.74249e-8  4.44939e-9  1.9537e-11  7.50302e-10  4.29669e-9  2.633e-11  7.31396e-11  1.12315e-10  5.63871e-8  4.74727e-8  5.458e-7  1.2441e-6  3.09567e-7  5.84651e-9  6.75581e-6  1.1232e-7  1.17925e-6  5.19689e-6  2.48605e-6  1.59055e-6  4.24064e-5  1.39653e-8  8.64382e-8  3.35974e-8  1.7134e-6  1.56634e-7  3.06979e-7  1.68768e-7  1.65954e-7  6.77905e-9  2.94158e-8  4.42036e-7  4.88785e-6  5.26736e-7  4.35457e-8  2.02777e-7  5.10046e-6
Running for Nlow = 16

Using MINRES solver:
read ../Davidson_algorithm/m_pp_Si.dat
Davidson with MINRES solver
iter=     1  Rnorm=  5.834e+00  size(V,2)=    16
iter=     2  Rnorm=  2.629e+00  size(V,2)=    32
iter=     3  Rnorm=  7.301e-01  size(V,2)=    48
iter=     4  Rnorm=  1.038e+00  size(V,2)=    64
iter=     5  Rnorm=  6.238e-01  size(V,2)=    80
iter=     6  Rnorm=  4.613e-01  size(V,2)=    96
iter=     7  Rnorm=  7.732e-03  size(V,2)=   112
converged!
186.117285 seconds (48.62 k allocations: 538.067 GiB, 11.51% gc time)
Full diagonalization
1×16 adjoint(::Vector{Float64}) with eltype Float64:
 -5.82534  -5.82531  -5.81978  -5.81978  -5.76312  -5.76311  -5.68525  -5.68525  -5.66719  -5.66718  -5.62343  -5.5599  -5.55988  -5.54776  -5.50522  -5.50522
1×16 adjoint(::Vector{Float64}) with eltype Float64:
 4.5862e-6  1.59003e-5  1.76381e-7  7.57793e-8  5.22871e-12  3.15357e-11  2.84217e-14  3.55271e-14  1.07134e-8  1.65039e-9  7.10543e-15  2.92832e-7  5.07052e-7  1.77636e-15  4.34586e-11  5.391e-10
Running for Nlow = 30

Using MINRES solver:
read ../Davidson_algorithm/m_pp_Si.dat
Davidson with MINRES solver
iter=     1  Rnorm=  7.958e+00  size(V,2)=    30
iter=     2  Rnorm=  3.788e+00  size(V,2)=    60
iter=     3  Rnorm=  1.129e+00  size(V,2)=    90
iter=     4  Rnorm=  1.003e+00  size(V,2)=   120
iter=     5  Rnorm=  7.882e-01  size(V,2)=   150
iter=     6  Rnorm=  2.782e-02  size(V,2)=   180
iter=     7  Rnorm=  9.445e-05  size(V,2)=   210
converged!
208.704386 seconds (59.58 k allocations: 603.306 GiB, 11.54% gc time)
Full diagonalization
1×30 adjoint(::Vector{Float64}) with eltype Float64:
 -5.82534  -5.82533  -5.81978  -5.81978  -5.76312  -5.76311  -5.68525  -5.68525  -5.66719  -5.66718  -5.62343  -5.5599  -5.55988  -5.54776  -5.50522  -5.50522  -5.47729  -5.47729  -5.44592  -5.42479  -5.42478  -5.41582  -5.41582  -5.41577  -5.40684  -5.40682  -5.29334  -5.28239  -5.28239  -5.28172
1×30 adjoint(::Vector{Float64}) with eltype Float64:
 8.79297e-14  6.21725e-14  2.66454e-15  -9.76996e-15  4.44089e-15  1.77636e-15  1.15463e-14  7.10543e-15  2.68224e-10  2.47713e-9  7.10543e-15  2.86882e-13  9.08607e-13  1.77636e-15  8.88178e-16  8.88178e-16  -8.88178e-16  -5.32907e-15  -2.66454e-15  -3.55271e-15  -8.88178e-15  0.0  -1.77636e-15  -1.77636e-15  1.77636e-15  6.21725e-15  6.21725e-15  3.18856e-13  1.27276e-12  8.70415e-14
Running for Nlow = 60

Using MINRES solver:
read ../Davidson_algorithm/m_pp_Si.dat
Davidson with MINRES solver
iter=     1  Rnorm=  1.071e+01  size(V,2)=    60
iter=     2  Rnorm=  4.115e+00  size(V,2)=   120
iter=     3  Rnorm=  5.851e-01  size(V,2)=   180
iter=     4  Rnorm=  9.507e-02  size(V,2)=   240
iter=     5  Rnorm=  3.170e-02  size(V,2)=   300
iter=     6  Rnorm=  1.389e-04  size(V,2)=   360
converged!
224.731933 seconds (71.08 k allocations: 643.358 GiB, 11.57% gc time)
Full diagonalization
1×60 adjoint(::Vector{Float64}) with eltype Float64:
 -5.82534  -5.82533  -5.81978  -5.81978  -5.76312  -5.76311  -5.68525  -5.68525  -5.66719  -5.66718  -5.62343  -5.5599  -5.55988  -5.54776  -5.50522  -5.50522  -5.47729  -5.47729  -5.44592  -5.42479  -5.42478  -5.41582  -5.41582  -5.41577  -5.40684  -5.40682  -5.29334  -5.28239  -5.28239  -5.28172  -5.28172  -5.2816  -5.28159  -5.15369  -5.12588  -5.12584  -5.09992  -5.09987  -5.09912  -5.09911  -5.07709  -5.07706  -5.04793  -5.04793  -5.01696  -5.01696  -4.99253  -4.99251  -4.99064  -4.99064  -4.97092  -4.97091  -4.95772  -4.95727  -4.95726  -4.95271  -4.95269  -4.87717  -4.87717  -4.81243
1×60 adjoint(::Vector{Float64}) with eltype Float64:
 -3.55271e-15  2.66454e-15  2.66454e-15  -1.15463e-14  -4.44089e-15  -1.77636e-15  8.88178e-15  2.66454e-15  -5.32907e-15  1.77636e-15  6.21725e-15  -6.21725e-15  1.77636e-15  -8.88178e-16  4.44089e-15  -1.77636e-15  8.88178e-16  -6.21725e-15  1.77636e-15  -3.55271e-15  -9.76996e-15  -8.88178e-16  -4.44089e-15  -2.66454e-15  -2.66454e-15  7.10543e-15  2.66454e-15  -1.77636e-15  6.21725e-15  8.88178e-16  -2.66454e-15  5.32907e-15  2.66454e-15  -1.5099e-14  -8.88178e-16  -2.66454e-15  1.95399e-14  7.10543e-15  5.32907e-15  1.77636e-15  -2.66454e-15  8.88178e-15  1.70795e-9  2.37945e-9  2.66454e-15  -8.88178e-16  1.77636e-15  0.0  -5.32907e-15  7.99361e-15  8.88178e-16  4.44089e-15  -4.44089e-15  9.02964e-10  5.57205e-10  -5.32907e-15  -1.15463e-14  -4.44089e-15  -8.88178e-16  1.68754e-14
Running for Nlow = 90

Using MINRES solver:
read ../Davidson_algorithm/m_pp_Si.dat
Davidson with MINRES solver
iter=     1  Rnorm=  1.231e+01  size(V,2)=    90
iter=     2  Rnorm=  4.169e+00  size(V,2)=   180
iter=     3  Rnorm=  6.109e-01  size(V,2)=   270
iter=     4  Rnorm=  5.086e-03  size(V,2)=   360
converged!
210.304339 seconds (65.44 k allocations: 599.398 GiB, 11.94% gc time)
Full diagonalization
1×90 adjoint(::Vector{Float64}) with eltype Float64:
 -5.82534  -5.82533  -5.81978  -5.81978  -5.76312  -5.76311  -5.68525  -5.68525  -5.66719  -5.66718  -5.62343  -5.5599  -5.55988  -5.54776  -5.50522  -5.50522  -5.47729  -5.47729  -5.44592  -5.42479  -5.42478  -5.41582  -5.41582  -5.41577  -5.40684  -5.40682  -5.29334  -5.28239  -5.28239  -5.28172  -5.28172  -5.2816  -5.28159  -5.15369  -5.12588  -5.12584  -5.09992  -5.09987  -5.09912  -5.09911  -5.07709  -5.07706  -5.04793  -5.04793  -5.01696  -5.01696  -4.99253  -4.99251  -4.99064  -4.99064  -4.97092  -4.97091  -4.95772  -4.95727  -4.95726  -4.95271  -4.95269  -4.87717  -4.87717  -4.81243  -4.81242  -4.7603  -4.7603  -4.7177  -4.7177  -4.6979  -4.69789  -4.6968  -4.6968  -4.64918  -4.64916  -4.56318  -4.56318  -4.51241  -4.5124  -4.48964  -4.48521  -4.48521  -4.45282  -4.45282  -4.39068  -4.39068  -4.38897  -4.35833  -4.35833  -4.34383  -4.34381  -4.34127  -4.20939  -4.20937
1×90 adjoint(::Vector{Float64}) with eltype Float64:
 4.90274e-13  4.92051e-13  1.12435e-11  3.34399e-12  3.35882e-11  3.35705e-11  2.04281e-13  1.95399e-13  4.80505e-13  4.85834e-13  1.88294e-13  2.6148e-12  2.51621e-12  7.10543e-15  1.32352e-9  1.38096e-9  2.22385e-10  1.99775e-10  2.84217e-14  1.42757e-11  3.40662e-10  8.58833e-11  6.39146e-10  7.04729e-10  1.56408e-12  1.56586e-12  1.68754e-14  9.92806e-11  9.96607e-11  2.15108e-11  4.67919e-11  1.72469e-10  1.72881e-10  8.35776e-13  4.05542e-11  4.05977e-11  2.70303e-8  2.66784e-8  3.65361e-11  3.44782e-11  7.14095e-12  7.29816e-12  3.32721e-11  3.20881e-11  4.72244e-12  4.72156e-12  3.66739e-9  3.64875e-9  2.06527e-9  5.78932e-10  1.62248e-10  1.64116e-10  1.27187e-12  3.28715e-12  3.33955e-12  1.14244e-10  9.35731e-11  6.98006e-8  1.02785e-7  1.91864e-11  1.92291e-11  1.05929e-9  1.02278e-9  1.97378e-8  1.97999e-8  2.91323e-13  2.95763e-13  4.42493e-7  4.42242e-7  4.6031e-10  1.91875e-9  3.4568e-10  3.43841e-10  3.53115e-8  3.53715e-8  3.55271e-15  3.1112e-8  3.14858e-8  1.07566e-8  1.14286e-8  1.61266e-8  1.65811e-8  1.52767e-13  2.44994e-8  2.45987e-8  1.08471e-8  2.51266e-8  7.26802e-6  6.74807e-10  7.01266e-10
Running for Nlow = 16

Using MINRES solver:
read ../Davidson_algorithm/m_pp_hBN.dat
Davidson with MINRES solver
iter=     1  Rnorm=  9.865e+00  size(V,2)=    16
iter=     2  Rnorm=  7.024e+00  size(V,2)=    32
iter=     3  Rnorm=  2.606e+00  size(V,2)=    48
iter=     4  Rnorm=  1.248e-02  size(V,2)=    64
iter=     5  Rnorm=  2.049e+00  size(V,2)=    80
iter=     6  Rnorm=  2.649e+00  size(V,2)=    96
iter=     7  Rnorm=  8.466e-01  size(V,2)=   112
iter=     8  Rnorm=  4.353e-02  size(V,2)=    32
iter=     9  Rnorm=  2.439e-04  size(V,2)=    48
converged!
398.829883 seconds (82.26 k allocations: 1.130 TiB, 11.71% gc time)
Full diagonalization
1×16 adjoint(::Vector{Float64}) with eltype Float64:
 -8.32444  -8.32426  -8.32426  -8.324  -8.324  -8.32377  -8.24973  -8.24973  -8.24613  -8.14818  -8.14818  -7.96666  -7.96666  -7.90118  -7.90111  -7.90111
1×16 adjoint(::Vector{Float64}) with eltype Float64:
 6.00619e-9  4.93966e-10  4.86953e-11  6.99369e-11  6.11777e-11  7.68624e-10  3.8332e-9  7.76275e-10  3.1373e-9  4.44745e-10  5.57487e-10  2.37499e-12  9.48752e-12  -2.66454e-15  -5.32907e-15  -8.88178e-16
Running for Nlow = 30

Using MINRES solver:
read ../Davidson_algorithm/m_pp_hBN.dat
Davidson with MINRES solver
iter=     1  Rnorm=  1.294e+01  size(V,2)=    30
iter=     2  Rnorm=  1.140e+01  size(V,2)=    60
iter=     3  Rnorm=  6.938e+00  size(V,2)=    90
iter=     4  Rnorm=  1.796e+00  size(V,2)=   120
iter=     5  Rnorm=  2.994e+00  size(V,2)=   150
iter=     6  Rnorm=  4.554e-01  size(V,2)=   180
iter=     7  Rnorm=  8.174e-01  size(V,2)=   210
iter=     8  Rnorm=  5.643e-03  size(V,2)=    60
converged!
512.552063 seconds (107.72 k allocations: 1.438 TiB, 11.94% gc time)
Full diagonalization
1×30 adjoint(::Vector{Float64}) with eltype Float64:
 -8.32444  -8.32426  -8.32426  -8.324  -8.324  -8.32377  -8.24973  -8.24973  -8.24613  -8.14818  -8.14818  -7.96666  -7.96666  -7.90118  -7.90111  -7.90111  -7.90104  -7.90104  -7.90097  -7.7688  -7.76864  -7.76864  -7.76859  -7.76859  -7.76843  -7.73881  -7.73834  -7.73834  -7.73767  -7.73767
1×30 adjoint(::Vector{Float64}) with eltype Float64:
 1.77636e-15  -3.55271e-15  3.55271e-15  7.10543e-15  5.32907e-15  8.88178e-15  5.61151e-12  7.35216e-11  5.62927e-12  1.59531e-10  6.03784e-12  6.31331e-10  2.86766e-11  -4.44089e-15  -7.10543e-15  8.88178e-16  2.04281e-14  1.77636e-15  -1.77636e-15  4.44089e-14  1.35003e-13  6.39488e-14  -3.55271e-15  1.14575e-13  4.08562e-14  6.19337e-6  1.79485e-9  6.72475e-11  7.70284e-10  1.47962e-11
Running for Nlow = 60

Using MINRES solver:
read ../Davidson_algorithm/m_pp_hBN.dat
Davidson with MINRES solver
iter=     1  Rnorm=  1.598e+01  size(V,2)=    60
iter=     2  Rnorm=  1.329e+01  size(V,2)=   120
iter=     3  Rnorm=  6.294e+00  size(V,2)=   180
iter=     4  Rnorm=  4.508e+00  size(V,2)=   240
iter=     5  Rnorm=  2.251e+00  size(V,2)=   300
iter=     6  Rnorm=  1.472e+00  size(V,2)=   360
iter=     7  Rnorm=  2.095e-01  size(V,2)=   420
iter=     8  Rnorm=  1.100e-03  size(V,2)=   120
converged!
1031.612829 seconds (212.75 k allocations: 2.843 TiB, 12.04% gc time)
Full diagonalization
1×60 adjoint(::Vector{Float64}) with eltype Float64:
 -8.32444  -8.32426  -8.32426  -8.324  -8.324  -8.32377  -8.24973  -8.24973  -8.24613  -8.14818  -8.14818  -7.96666  -7.96666  -7.90118  -7.90111  -7.90111  -7.90104  -7.90104  -7.90097  -7.7688  -7.76864  -7.76864  -7.76859  -7.76859  -7.76843  -7.73882  -7.73834  -7.73834  -7.73767  -7.73767  -7.73707  -7.40376  -7.40376  -7.23998  -7.18075  -7.18074  -7.05367  -7.05367  -6.90062  -6.90051  -6.90051  -6.90029  -6.90029  -6.90015  -6.81248  -6.81248  -6.75086  -6.75067  -6.75067  -6.74982  -6.74982  -6.74978  -6.71785  -6.49485  -6.49485  -6.35367  -6.35367  -6.27374  -6.2737  -5.86353
1×60 adjoint(::Vector{Float64}) with eltype Float64:
 7.10543e-15  -7.10543e-15  -3.55271e-15  8.88178e-15  3.55271e-15  1.06581e-14  5.32907e-15  3.55271e-15  5.32907e-15  -1.77636e-14  -5.32907e-15  3.55271e-15  7.99361e-15  -4.44089e-15  -6.21725e-15  7.10543e-15  -3.55271e-15  -5.32907e-15  -1.06581e-14  -4.44089e-15  -8.88178e-16  4.44089e-15  1.15463e-14  4.44089e-15  -8.88178e-15  3.32978e-12  0.0  -7.99361e-15  3.55271e-15  8.88178e-15  1.06937e-12  0.0  -5.32907e-15  -1.5099e-14  -7.10543e-15  7.2669e-11  2.93099e-14  2.93099e-14  2.6325e-7  1.50644e-11  2.4917e-11  2.71783e-11  1.15472e-11  4.12631e-8  4.26326e-14  2.30926e-14  0.0  -1.77636e-15  -2.66454e-15  5.32907e-15  -9.76996e-15  2.66454e-15  3.55271e-15  -8.88178e-16  -1.42109e-14  8.88178e-16  4.44089e-15  1.59162e-12  2.39815e-10  1.06581e-14
Running for Nlow = 90

Using MINRES solver:
read ../Davidson_algorithm/m_pp_hBN.dat
Davidson with MINRES solver
iter=     1  Rnorm=  1.878e+01  size(V,2)=    90
iter=     2  Rnorm=  1.469e+01  size(V,2)=   180
iter=     3  Rnorm=  5.613e+00  size(V,2)=   270
iter=     4  Rnorm=  2.803e+00  size(V,2)=   360
iter=     5  Rnorm=  6.875e-01  size(V,2)=   450
iter=     6  Rnorm=  4.324e-01  size(V,2)=   540
iter=     7  Rnorm=  2.062e-03  size(V,2)=   630
converged!
1136.797524 seconds (243.56 k allocations: 3.192 TiB, 12.11% gc time)
Full diagonalization
1×90 adjoint(::Vector{Float64}) with eltype Float64:
 -8.32444  -8.32426  -8.32426  -8.324  -8.324  -8.32377  -8.24973  -8.24973  -8.24613  -8.14818  -8.14818  -7.96666  -7.96666  -7.90118  -7.90111  -7.90111  -7.90104  -7.90104  -7.90097  -7.7688  -7.76864  -7.76864  -7.76859  -7.76859  -7.76843  -7.73882  -7.73834  -7.73834  -7.73767  -7.73767  -7.73707  -7.40376  -7.40376  -7.23998  -7.18075  -7.18074  -7.05367  -7.05367  -6.90062  -6.90051  -6.90051  -6.90029  -6.90029  -6.90015  -6.81248  -6.81248  -6.75086  -6.75067  -6.75067  -6.74982  -6.74982  -6.74978  -6.71785  -6.49485  -6.49485  -6.35367  -6.35367  -6.27374  -6.2737  -5.86353  -5.86325  -5.86325  -5.86272  -5.86272  -5.86238  -5.82949  -5.82939  -5.82939  -5.8293  -5.8293  -5.82922  -5.70369  -5.7036  -5.7036  -5.7031  -5.7031  -5.70301  -4.83279  -4.83279  -4.69283  -4.69282  -4.29784  -4.29783  -4.06392  -3.98963  -3.98955  -3.98955  -3.98935  -3.98935  -3.98927
1×90 adjoint(::Vector{Float64}) with eltype Float64:
 5.32907e-15  -5.32907e-15  -5.32907e-15  -1.77636e-15  0.0  7.10543e-15  2.13163e-14  3.55271e-15  7.10543e-15  -1.95399e-14  -1.95399e-14  -4.44089e-15  1.77636e-15  -6.21725e-15  -7.10543e-15  2.66454e-15  7.10543e-15  -8.88178e-16  -1.15463e-14  -1.06581e-14  3.55271e-15  2.66454e-15  6.21725e-15  3.55271e-15  -9.76996e-15  -8.88178e-16  1.77636e-15  -1.06581e-14  -1.77636e-15  8.88178e-15  -1.77636e-15  -6.21725e-15  8.88178e-16  -1.95399e-14  4.44089e-15  -1.77636e-15  0.0  5.32907e-15  -7.10543e-15  2.78888e-13  2.76223e-13  2.19913e-12  2.7649e-12  -3.55271e-15  1.90958e-13  1.08358e-13  -6.21725e-15  -1.33227e-14  -1.33227e-14  4.44089e-15  -3.55271e-15  -8.88178e-16  0.0  -8.88178e-15  -1.59872e-14  -3.55271e-15  -1.77636e-15  -1.77636e-15  -8.88178e-16  8.88178e-16  2.66454e-15  -6.21725e-15  1.77636e-15  -7.10543e-15  -2.66454e-15  -4.44089e-15  -5.32907e-15  -7.99361e-15  5.32907e-15  -3.55271e-15  -5.32907e-15  -6.21725e-15  -2.66454e-15  -7.10543e-15  0.0  -1.15463e-14  1.77636e-15  -2.66454e-15  -7.10543e-15  1.07589e-6  1.00234e-7  8.88178e-16  -9.76996e-15  -6.21725e-15  2.35367e-14  0.0  -4.44089e-16  -2.22045e-15  -4.44089e-16  3.4639e-14
