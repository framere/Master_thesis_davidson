Running for Nlow = 16
Using CG solver:
read ../Davidson_algorithm/m_pp_He.dat
Davidson with CG solver
iter=     1  Rnorm=  1.760e+00  size(V,2)=    16
iter=     2  Rnorm=  2.435e+00  size(V,2)=    32
iter=     3  Rnorm=  3.182e+00  size(V,2)=    48
iter=     4  Rnorm=  9.858e-01  size(V,2)=    64
iter=     5  Rnorm=  3.138e+00  size(V,2)=    80
iter=     6  Rnorm=  4.269e-01  size(V,2)=    96
iter=     7  Rnorm=  1.369e-03  size(V,2)=   112
converged!
117.349882 seconds (47.98 k allocations: 285.869 GiB, 11.94% gc time, 0.01% compilation time)
Full diagonalization
1×16 adjoint(::Vector{Float64}) with eltype Float64:
 -6.13707  -5.13362  -5.12402  -5.11503  -4.34701  -4.3468  -4.34264  -4.3083  -4.1501  -0.991389  -0.985088  -0.97903  -0.761233  -0.643186  -0.642085  -0.639968
1×16 adjoint(::Vector{Float64}) with eltype Float64:
 5.32907e-15  1.77636e-15  -8.88178e-16  1.06581e-14  6.3884e-11  2.67342e-13  4.66649e-12  4.33107e-9  7.99361e-15  1.66533e-15  -1.66533e-15  -1.44329e-15  9.99201e-16  1.79723e-12  3.42842e-6  2.90424e-10
Running for Nlow = 30
Using CG solver:
read ../Davidson_algorithm/m_pp_He.dat
Davidson with CG solver
iter=     1  Rnorm=  2.749e+00  size(V,2)=    30
iter=     2  Rnorm=  3.903e+00  size(V,2)=    60
iter=     3  Rnorm=  2.258e+00  size(V,2)=    90
iter=     4  Rnorm=  2.082e+00  size(V,2)=   120
iter=     5  Rnorm=  4.018e-01  size(V,2)=   150
iter=     6  Rnorm=  8.972e-03  size(V,2)=   180
converged!
288.624835 seconds (133.63 k allocations: 850.223 GiB, 9.89% gc time)
Full diagonalization
1×30 adjoint(::Vector{Float64}) with eltype Float64:
 -6.13707  -5.13362  -5.12402  -5.11503  -4.34701  -4.3468  -4.34264  -4.3083  -4.1501  -0.991389  -0.985088  -0.97903  -0.761233  -0.643186  -0.642015  -0.639968  -0.638299  -0.63581  -0.634046  -0.633173  -0.451494  -0.448879  -0.448599  -0.447421  -0.44405  -0.279616  -0.277301  -0.276458  -0.27525  -0.274927
1×30 adjoint(::Vector{Float64}) with eltype Float64:
 -3.55271e-15  0.0  -7.99361e-15  -3.55271e-15  8.70504e-12  7.81597e-14  6.1906e-12  1.27525e-11  1.77636e-14  -1.66533e-15  1.66533e-15  -1.66533e-15  3.33067e-16  2.36889e-8  7.28643e-5  1.01534e-7  1.80414e-7  6.05618e-8  1.05546e-5  3.14772e-8  3.97594e-10  5.56492e-10  6.16146e-9  4.46464e-8  2.09638e-9  4.64052e-6  5.56638e-5  4.43317e-5  9.11214e-6  2.0558e-5
Running for Nlow = 60
Using CG solver:
read ../Davidson_algorithm/m_pp_He.dat
Davidson with CG solver
iter=     1  Rnorm=  3.599e+00  size(V,2)=    60
iter=     2  Rnorm=  3.808e+00  size(V,2)=   120
iter=     3  Rnorm=  2.426e+00  size(V,2)=   180
iter=     4  Rnorm=  2.433e+00  size(V,2)=   240
iter=     5  Rnorm=  1.514e-01  size(V,2)=   300
iter=     6  Rnorm=  3.491e-04  size(V,2)=   360
converged!
772.001085 seconds (350.30 k allocations: 2.217 TiB, 10.12% gc time)
Full diagonalization
1×60 adjoint(::Vector{Float64}) with eltype Float64:
 -6.13707  -5.13362  -5.12402  -5.11503  -4.34701  -4.3468  -4.34264  -4.3083  -4.1501  -0.991389  -0.985088  -0.97903  -0.761233  -0.643186  -0.642088  -0.639968  -0.638299  -0.63581  -0.634056  -0.633173  -0.451494  -0.448879  -0.448599  -0.447421  -0.44405  -0.27962  -0.277356  -0.276502  -0.275259  -0.274948  -0.274906  -0.27213  -0.272045  -0.271784  -0.171543  -0.16928  -0.167529  -0.129366  -0.127231  -0.127088  -0.126952  -0.126268  -0.124999  -0.124875  -0.12477  -0.12368  -0.123345  -0.123304  -0.12307  -0.122988  -0.122626  -0.122336  -0.12175  -0.121627  -0.121584  -0.109959  -0.0688216  -0.0673767  -0.0671764  -0.0669604
1×60 adjoint(::Vector{Float64}) with eltype Float64:
 3.55271e-15  1.15463e-14  2.66454e-15  1.24345e-14  9.76996e-15  -2.66454e-15  -1.06581e-14  5.32907e-15  -5.32907e-15  -4.44089e-16  -5.55112e-16  -8.88178e-16  -6.66134e-16  1.39821e-12  3.63032e-12  3.32245e-12  1.04472e-13  3.27516e-14  1.22369e-12  2.23155e-13  1.40554e-13  3.39728e-14  1.29952e-13  2.27596e-15  2.83107e-14  1.45454e-9  4.47242e-8  2.34936e-7  1.29945e-8  1.40644e-8  7.01991e-9  2.6755e-8  5.0088e-9  8.36916e-10  4.28269e-14  1.21542e-13  3.57797e-13  2.57049e-9  3.30656e-10  1.33295e-8  5.70204e-9  1.54951e-9  4.25945e-10  1.15729e-9  1.15588e-7  1.46972e-9  2.52355e-8  2.48673e-9  5.00628e-9  6.73275e-9  5.09503e-10  7.39085e-9  1.08679e-8  2.71988e-8  3.68157e-10  2.49182e-10  1.06964e-11  1.16128e-12  1.98175e-12  2.16008e-12
Running for Nlow = 90
Using CG solver:
read ../Davidson_algorithm/m_pp_He.dat
Davidson with CG solver
iter=     1  Rnorm=  4.039e+00  size(V,2)=    90
iter=     2  Rnorm=  4.201e+00  size(V,2)=   180
iter=     3  Rnorm=  1.865e+00  size(V,2)=   270
iter=     4  Rnorm=  1.671e+00  size(V,2)=   360
iter=     5  Rnorm=  6.063e-03  size(V,2)=   450
converged!
1217.546607 seconds (542.51 k allocations: 3.477 TiB, 10.92% gc time)
Full diagonalization
1×90 adjoint(::Vector{Float64}) with eltype Float64:
 -6.13707  -5.13362  -5.12402  -5.11503  -4.34701  -4.3468  -4.34264  -4.3083  -4.1501  -0.991389  -0.985088  -0.97903  -0.761233  -0.643186  -0.642088  -0.639968  -0.638299  -0.63581  -0.634056  -0.633173  -0.451494  -0.448879  -0.448599  -0.447421  -0.44405  -0.27962  -0.277356  -0.276502  -0.275258  -0.274947  -0.274906  -0.272129  -0.272044  -0.271783  -0.171543  -0.16928  -0.167529  -0.129366  -0.127228  -0.127087  -0.126951  -0.126267  -0.124998  -0.124874  -0.12477  -0.123679  -0.123345  -0.123298  -0.123068  -0.122987  -0.122626  -0.122335  -0.121749  -0.121627  -0.121583  -0.109959  -0.0688216  -0.0673767  -0.0671764  -0.0669604  -0.0668817  -0.060529  -0.0595274  -0.0590155  -0.0589549  -0.0587024  -0.0583623  -0.0582347  -0.0579578  -0.0578985  -0.0573074  -0.0572287  -0.0569236  -0.0564937  -0.051687  -0.0509295  -0.0506476  -0.0502815  -0.0502135  -0.050205  -0.0494388  -0.0493931  -0.0493627  -0.0297583  -0.0293294  -0.0289728  -0.0284442  -0.0284068  -0.0283594  -0.028276
1×90 adjoint(::Vector{Float64}) with eltype Float64:
 -8.88178e-16  -8.88178e-15  -2.66454e-15  3.55271e-15  3.1708e-13  2.73648e-12  3.07576e-12  1.08068e-9  5.32907e-13  1.66533e-15  3.33067e-16  -1.11022e-16  1.33227e-15  2.87848e-8  6.4368e-8  3.42972e-8  3.02276e-8  2.51916e-9  7.33625e-8  4.55228e-7  8.8886e-11  1.63497e-11  6.60916e-9  2.25642e-12  1.14127e-11  4.33121e-7  1.90864e-7  4.82939e-7  1.73297e-6  1.32286e-6  2.24133e-7  1.03712e-6  1.46906e-6  1.36441e-6  4.12886e-10  3.4367e-10  8.6582e-10  9.63697e-8  2.99988e-6  1.01801e-6  9.08766e-7  1.13191e-6  8.85739e-7  7.25844e-7  4.04827e-7  1.59754e-6  3.40513e-7  5.62487e-6  1.97528e-6  1.68181e-6  1.69682e-7  4.43652e-7  8.07946e-7  3.43303e-7  5.34631e-7  1.19634e-9  6.56826e-9  1.46374e-8  5.54231e-10  4.72052e-9  2.16561e-7  4.47052e-7  2.17759e-6  1.06038e-5  9.9166e-6  1.21768e-5  2.89039e-7  1.41072e-5  5.40361e-6  4.58241e-5  0.000264597  3.44388e-5  7.62035e-5  8.24964e-5  2.31109e-7  3.48174e-6  6.65987e-8  3.26309e-6  1.11891e-6  2.05146e-6  5.25639e-7  2.55727e-6  1.26994e-7  1.26585e-6  1.20543e-6  4.87265e-6  9.21066e-6  1.99015e-6  1.94771e-6  3.20957e-6
Running for Nlow = 16
Using CG solver:
read ../Davidson_algorithm/m_pp_Si.dat
Davidson with CG solver
iter=     1  Rnorm=  5.834e+00  size(V,2)=    16
iter=     2  Rnorm=  2.639e+00  size(V,2)=    32
iter=     3  Rnorm=  9.187e-01  size(V,2)=    48
iter=     4  Rnorm=  1.368e+00  size(V,2)=    64
iter=     5  Rnorm=  8.860e-01  size(V,2)=    80
iter=     6  Rnorm=  6.211e-01  size(V,2)=    96
iter=     7  Rnorm=  2.033e-02  size(V,2)=   112
iter=     8  Rnorm=  1.779e-04  size(V,2)=    32
converged!
233.168689 seconds (58.14 k allocations: 665.377 GiB, 11.76% gc time)
Full diagonalization
1×16 adjoint(::Vector{Float64}) with eltype Float64:
 -5.82534  -5.82533  -5.81978  -5.81978  -5.76312  -5.76311  -5.68525  -5.68525  -5.66719  -5.66718  -5.62343  -5.5599  -5.55988  -5.54776  -5.50522  -5.50522
1×16 adjoint(::Vector{Float64}) with eltype Float64:
 4.68791e-9  6.08995e-9  6.35492e-11  1.8078e-11  -4.44089e-15  -4.44089e-15  1.33227e-14  3.55271e-15  1.82965e-13  1.85354e-11  9.76996e-15  3.8715e-10  7.06163e-9  8.88178e-16  9.76996e-15  1.76748e-13
Running for Nlow = 30
Using CG solver:
read ../Davidson_algorithm/m_pp_Si.dat
Davidson with CG solver
iter=     1  Rnorm=  7.958e+00  size(V,2)=    30
iter=     2  Rnorm=  3.798e+00  size(V,2)=    60
iter=     3  Rnorm=  1.207e+00  size(V,2)=    90
iter=     4  Rnorm=  1.074e+00  size(V,2)=   120
iter=     5  Rnorm=  6.906e-01  size(V,2)=   150
iter=     6  Rnorm=  7.184e-02  size(V,2)=   180
iter=     7  Rnorm=  3.283e-04  size(V,2)=   210
converged!
256.697547 seconds (67.75 k allocations: 740.336 GiB, 11.59% gc time)
Full diagonalization
1×30 adjoint(::Vector{Float64}) with eltype Float64:
 -5.82534  -5.82533  -5.81978  -5.81978  -5.76312  -5.76311  -5.68525  -5.68525  -5.66719  -5.66718  -5.62343  -5.5599  -5.55988  -5.54776  -5.50522  -5.50522  -5.47729  -5.47729  -5.44592  -5.42479  -5.42478  -5.41582  -5.41582  -5.41577  -5.40684  -5.40682  -5.29334  -5.28239  -5.28239  -5.28172
1×30 adjoint(::Vector{Float64}) with eltype Float64:
 7.54952e-14  6.57252e-14  3.55271e-15  -7.10543e-15  5.32907e-15  8.88178e-15  4.17444e-14  5.32907e-15  1.49527e-8  1.21717e-8  7.10543e-15  3.88134e-12  9.22373e-12  -4.44089e-15  8.88178e-16  0.0  -8.88178e-16  -3.55271e-15  -2.66454e-15  -3.55271e-15  -7.10543e-15  8.88178e-16  0.0  -2.66454e-15  0.0  6.21725e-15  3.55271e-15  1.19185e-11  1.27693e-11  1.77636e-15
Running for Nlow = 60
Using CG solver:
read ../Davidson_algorithm/m_pp_Si.dat
Davidson with CG solver
iter=     1  Rnorm=  1.071e+01  size(V,2)=    60
iter=     2  Rnorm=  4.128e+00  size(V,2)=   120
iter=     3  Rnorm=  5.855e-01  size(V,2)=   180
iter=     4  Rnorm=  1.530e-01  size(V,2)=   240
iter=     5  Rnorm=  7.791e-02  size(V,2)=   300
iter=     6  Rnorm=  3.642e-04  size(V,2)=   360
converged!
237.485825 seconds (69.91 k allocations: 678.870 GiB, 11.48% gc time)
Full diagonalization
1×60 adjoint(::Vector{Float64}) with eltype Float64:
 -5.82534  -5.82533  -5.81978  -5.81978  -5.76312  -5.76311  -5.68525  -5.68525  -5.66719  -5.66718  -5.62343  -5.5599  -5.55988  -5.54776  -5.50522  -5.50522  -5.47729  -5.47729  -5.44592  -5.42479  -5.42478  -5.41582  -5.41582  -5.41577  -5.40684  -5.40682  -5.29334  -5.28239  -5.28239  -5.28172  -5.28172  -5.2816  -5.28159  -5.15369  -5.12588  -5.12584  -5.09992  -5.09987  -5.09912  -5.09911  -5.07709  -5.07706  -5.04793  -5.04793  -5.01696  -5.01696  -4.99253  -4.99251  -4.99064  -4.99064  -4.97092  -4.97091  -4.95772  -4.95727  -4.95726  -4.95271  -4.95269  -4.87717  -4.87717  -4.81243
1×60 adjoint(::Vector{Float64}) with eltype Float64:
 -7.99361e-15  0.0  -8.88178e-16  -1.15463e-14  -1.77636e-15  0.0  1.15463e-14  2.66454e-15  -4.44089e-15  8.88178e-16  1.77636e-15  -7.99361e-15  1.77636e-15  -2.66454e-15  8.88178e-16  0.0  -2.66454e-15  -3.55271e-15  -2.66454e-15  -7.10543e-15  -7.10543e-15  8.88178e-16  -4.44089e-15  8.88178e-16  1.77636e-15  5.32907e-15  1.77636e-15  -8.88178e-16  -8.88178e-16  -3.55271e-15  -3.55271e-15  8.88178e-16  2.66454e-15  -1.15463e-14  2.66454e-15  -5.32907e-15  2.4869e-14  2.4869e-14  5.32907e-15  3.55271e-15  -4.44089e-15  5.32907e-15  1.66326e-8  1.36248e-8  2.66454e-15  -1.77636e-15  2.66454e-15  -3.55271e-15  -8.88178e-16  7.99361e-15  1.77636e-15  5.32907e-15  -3.55271e-15  3.25669e-9  7.73033e-9  -5.32907e-15  -1.15463e-14  -7.10543e-15  -8.88178e-16  3.55271e-15
Running for Nlow = 90
Using CG solver:
read ../Davidson_algorithm/m_pp_Si.dat
Davidson with CG solver
iter=     1  Rnorm=  1.231e+01  size(V,2)=    90
iter=     2  Rnorm=  4.191e+00  size(V,2)=   180
iter=     3  Rnorm=  5.624e-01  size(V,2)=   270
iter=     4  Rnorm=  7.215e-03  size(V,2)=   360
converged!
225.260990 seconds (65.18 k allocations: 641.796 GiB, 11.34% gc time)
Full diagonalization
1×90 adjoint(::Vector{Float64}) with eltype Float64:
 -5.82534  -5.82533  -5.81978  -5.81978  -5.76312  -5.76311  -5.68525  -5.68525  -5.66719  -5.66718  -5.62343  -5.5599  -5.55988  -5.54776  -5.50522  -5.50522  -5.47729  -5.47729  -5.44592  -5.42479  -5.42478  -5.41582  -5.41582  -5.41577  -5.40684  -5.40682  -5.29334  -5.28239  -5.28239  -5.28172  -5.28172  -5.2816  -5.28159  -5.15369  -5.12588  -5.12584  -5.09992  -5.09987  -5.09912  -5.09911  -5.07709  -5.07706  -5.04793  -5.04793  -5.01696  -5.01696  -4.99253  -4.99251  -4.99064  -4.99064  -4.97092  -4.97091  -4.95772  -4.95727  -4.95726  -4.95271  -4.95269  -4.87717  -4.87717  -4.81243  -4.81242  -4.7603  -4.7603  -4.7177  -4.7177  -4.6979  -4.69789  -4.6968  -4.6968  -4.64918  -4.64916  -4.56318  -4.56318  -4.51241  -4.5124  -4.48964  -4.48521  -4.48521  -4.45282  -4.45282  -4.39068  -4.39068  -4.38897  -4.35833  -4.35833  -4.34383  -4.34381  -4.34127  -4.20939  -4.20937
1×90 adjoint(::Vector{Float64}) with eltype Float64:
 1.28519e-12  1.29141e-12  1.67555e-11  6.40821e-12  4.48512e-11  4.46896e-11  4.06786e-13  3.96128e-13  7.54063e-13  7.5584e-13  1.58096e-13  3.12284e-12  2.50733e-12  1.77636e-15  3.30476e-10  3.28967e-10  6.94991e-11  6.93579e-11  8.88178e-16  3.72711e-10  1.24834e-10  7.32382e-10  5.52067e-9  5.86072e-9  3.1779e-12  3.34843e-12  3.37508e-14  1.14645e-10  1.14735e-10  3.77067e-11  7.83489e-11  6.72241e-10  6.73912e-10  2.02238e-12  3.49933e-11  3.50049e-11  7.97657e-8  7.96561e-8  7.07807e-11  5.60254e-11  1.21307e-11  1.21441e-11  4.07869e-11  4.19904e-11  4.18865e-12  4.18598e-12  7.35366e-9  7.33553e-9  3.79169e-9  1.05672e-9  3.66494e-10  3.39455e-10  8.45723e-12  1.84208e-12  1.85008e-12  4.21716e-11  1.36045e-10  7.24458e-8  1.62258e-7  6.32054e-11  6.27614e-11  2.73498e-9  2.71955e-9  5.52811e-8  5.54118e-8  1.12443e-12  1.20703e-12  4.17931e-7  4.17912e-7  7.42468e-9  3.51988e-9  3.37505e-10  3.29103e-10  4.58307e-8  4.59605e-8  1.59872e-14  6.98427e-8  2.13189e-8  2.57541e-8  2.61677e-8  3.60615e-8  3.62235e-8  3.40172e-13  6.70184e-8  6.71754e-8  1.97106e-8  2.14477e-8  1.34825e-5  9.72713e-10  9.09081e-10
Running for Nlow = 16
Using CG solver:
read ../Davidson_algorithm/m_pp_hBN.dat
Davidson with CG solver
iter=     1  Rnorm=  9.865e+00  size(V,2)=    16
iter=     2  Rnorm=  7.024e+00  size(V,2)=    32
iter=     3  Rnorm=  2.605e+00  size(V,2)=    48
iter=     4  Rnorm=  1.213e-02  size(V,2)=    64
iter=     5  Rnorm=  2.224e+00  size(V,2)=    80
iter=     6  Rnorm=  2.983e+00  size(V,2)=    96
iter=     7  Rnorm=  1.602e+00  size(V,2)=   112
iter=     8  Rnorm=  1.418e-01  size(V,2)=    32
iter=     9  Rnorm=  1.096e-03  size(V,2)=    48
converged!
486.362755 seconds (94.43 k allocations: 1.346 TiB, 11.83% gc time)
Full diagonalization
1×16 adjoint(::Vector{Float64}) with eltype Float64:
 -8.32444  -8.32426  -8.32426  -8.324  -8.324  -8.32377  -8.24973  -8.24973  -8.24613  -8.14818  -8.14818  -7.96666  -7.96666  -7.90118  -7.90111  -7.90111
1×16 adjoint(::Vector{Float64}) with eltype Float64:
 1.03131e-8  4.11141e-9  1.95401e-8  9.52927e-10  7.09456e-10  1.67019e-9  3.53037e-8  1.3483e-7  5.9821e-8  2.25822e-9  5.9569e-8  1.49392e-12  7.26956e-11  8.88178e-16  -1.24345e-14  -8.88178e-16
Running for Nlow = 30
Using CG solver:
read ../Davidson_algorithm/m_pp_hBN.dat
Davidson with CG solver
iter=     1  Rnorm=  1.294e+01  size(V,2)=    30
iter=     2  Rnorm=  1.136e+01  size(V,2)=    60
iter=     3  Rnorm=  6.896e+00  size(V,2)=    90
iter=     4  Rnorm=  1.974e+00  size(V,2)=   120
iter=     5  Rnorm=  2.619e+00  size(V,2)=   150
iter=     6  Rnorm=  4.768e-01  size(V,2)=   180
iter=     7  Rnorm=  4.237e-03  size(V,2)=   210
converged!
596.411447 seconds (116.59 k allocations: 1.647 TiB, 12.21% gc time)
Full diagonalization
1×30 adjoint(::Vector{Float64}) with eltype Float64:
 -8.32444  -8.32426  -8.32426  -8.324  -8.324  -8.32377  -8.24973  -8.24973  -8.24613  -8.14818  -8.14818  -7.96666  -7.96666  -7.90118  -7.90111  -7.90111  -7.90104  -7.90104  -7.90097  -7.7688  -7.76864  -7.76864  -7.76859  -7.76859  -7.76843  -7.73882  -7.73834  -7.73834  -7.73767  -7.73767
1×30 adjoint(::Vector{Float64}) with eltype Float64:
 1.04325e-11  2.59287e-9  8.60947e-11  8.90346e-11  2.28036e-9  3.09441e-12  3.76168e-8  6.8914e-8  8.74775e-9  9.08892e-8  4.99842e-7  4.56714e-8  1.79467e-7  2.13163e-14  4.06786e-13  5.61418e-11  5.50671e-14  1.25233e-13  5.68434e-13  3.33067e-12  4.11079e-10  2.88247e-10  1.22103e-8  9.82702e-9  5.56861e-11  5.96685e-7  2.22613e-8  6.97436e-7  1.46877e-8  5.31718e-7
Running for Nlow = 60
Using CG solver:
read ../Davidson_algorithm/m_pp_hBN.dat
Davidson with CG solver
iter=     1  Rnorm=  1.598e+01  size(V,2)=    60
iter=     2  Rnorm=  1.328e+01  size(V,2)=   120
iter=     3  Rnorm=  7.049e+00  size(V,2)=   180
iter=     4  Rnorm=  5.194e+00  size(V,2)=   240
iter=     5  Rnorm=  2.736e+00  size(V,2)=   300
iter=     6  Rnorm=  1.692e+00  size(V,2)=   360
iter=     7  Rnorm=  9.713e-02  size(V,2)=   420
iter=     8  Rnorm=  5.454e-04  size(V,2)=   120
converged!
1208.670381 seconds (242.36 k allocations: 3.389 TiB, 11.72% gc time)
Full diagonalization
1×60 adjoint(::Vector{Float64}) with eltype Float64:
 -8.32444  -8.32426  -8.32426  -8.324  -8.324  -8.32377  -8.24973  -8.24973  -8.24613  -8.14818  -8.14818  -7.96666  -7.96666  -7.90118  -7.90111  -7.90111  -7.90104  -7.90104  -7.90097  -7.7688  -7.76864  -7.76864  -7.76859  -7.76859  -7.76843  -7.73882  -7.73834  -7.73834  -7.73767  -7.73767  -7.73707  -7.40376  -7.40376  -7.23998  -7.18075  -7.18074  -7.05367  -7.05367  -6.90062  -6.90051  -6.90051  -6.90029  -6.90029  -6.90015  -6.81248  -6.81248  -6.75086  -6.75067  -6.75067  -6.74982  -6.74982  -6.74978  -6.71785  -6.49485  -6.49485  -6.35367  -6.35367  -6.27374  -6.2737  -5.86353
1×60 adjoint(::Vector{Float64}) with eltype Float64:
 1.77636e-14  -7.10543e-15  -1.77636e-15  -8.88178e-15  1.24345e-14  5.32907e-15  1.24345e-14  7.10543e-15  -3.55271e-15  -1.59872e-14  -1.77636e-15  -3.55271e-15  1.59872e-14  7.99361e-15  0.0  1.77636e-15  2.66454e-15  0.0  -1.42109e-14  0.0  5.32907e-15  -8.88178e-16  0.0  -2.66454e-15  -3.55271e-15  5.99076e-12  9.76996e-15  -1.77636e-15  2.30926e-14  1.06581e-14  7.99361e-14  -9.76996e-15  1.77636e-15  -6.21725e-15  3.64153e-14  8.37286e-12  4.35119e-12  1.63158e-12  6.39733e-9  8.45741e-11  1.29612e-11  1.54118e-10  6.32383e-13  5.05241e-10  5.35572e-13  8.26894e-13  -2.66454e-15  -8.88178e-16  3.90799e-14  2.84217e-14  8.88178e-15  -1.77636e-15  -4.44089e-15  -8.88178e-15  4.73399e-13  3.55271e-15  -2.66454e-15  1.63958e-12  7.23946e-8  1.77636e-15
Running for Nlow = 90
Using CG solver:
read ../Davidson_algorithm/m_pp_hBN.dat
Davidson with CG solver
iter=     1  Rnorm=  1.878e+01  size(V,2)=    90
iter=     2  Rnorm=  1.469e+01  size(V,2)=   180
iter=     3  Rnorm=  5.627e+00  size(V,2)=   270
iter=     4  Rnorm=  4.229e+00  size(V,2)=   360
iter=     5  Rnorm=  7.985e-01  size(V,2)=   450
iter=     6  Rnorm=  1.151e-01  size(V,2)=   540
iter=     7  Rnorm=  2.309e-04  size(V,2)=   630
converged!
1154.985252 seconds (264.94 k allocations: 3.634 TiB, 10.06% gc time)
Full diagonalization
1×90 adjoint(::Vector{Float64}) with eltype Float64:
 -8.32444  -8.32426  -8.32426  -8.324  -8.324  -8.32377  -8.24973  -8.24973  -8.24613  -8.14818  -8.14818  -7.96666  -7.96666  -7.90118  -7.90111  -7.90111  -7.90104  -7.90104  -7.90097  -7.7688  -7.76864  -7.76864  -7.76859  -7.76859  -7.76843  -7.73882  -7.73834  -7.73834  -7.73767  -7.73767  -7.73707  -7.40376  -7.40376  -7.23998  -7.18075  -7.18074  -7.05367  -7.05367  -6.90062  -6.90051  -6.90051  -6.90029  -6.90029  -6.90015  -6.81248  -6.81248  -6.75086  -6.75067  -6.75067  -6.74982  -6.74982  -6.74978  -6.71785  -6.49485  -6.49485  -6.35367  -6.35367  -6.27374  -6.2737  -5.86353  -5.86325  -5.86325  -5.86272  -5.86272  -5.86238  -5.82949  -5.82939  -5.82939  -5.8293  -5.8293  -5.82922  -5.70369  -5.7036  -5.7036  -5.7031  -5.7031  -5.70301  -4.83279  -4.83279  -4.69283  -4.69282  -4.29784  -4.29783  -4.06392  -3.98963  -3.98955  -3.98955  -3.98935  -3.98935  -3.98927
1×90 adjoint(::Vector{Float64}) with eltype Float64:
 -3.55271e-15  -1.77636e-15  -3.55271e-15  -3.55271e-15  1.77636e-15  5.32907e-15  1.42109e-14  -5.32907e-15  1.77636e-15  -1.77636e-14  -2.13163e-14  1.77636e-15  8.88178e-15  -4.44089e-15  -1.77636e-15  4.44089e-15  9.76996e-15  1.06581e-14  -7.10543e-15  -4.44089e-15  -3.55271e-15  -8.88178e-16  -3.55271e-15  -1.77636e-15  -8.88178e-15  -6.21725e-15  -7.10543e-15  -1.06581e-14  1.77636e-15  5.32907e-15  -7.10543e-15  -8.88178e-16  -3.55271e-15  -1.5099e-14  3.55271e-15  -2.66454e-15  0.0  -8.88178e-16  1.06581e-14  1.28875e-12  1.66089e-12  2.78533e-12  2.75335e-12  7.10543e-15  5.15143e-13  3.81029e-13  -6.21725e-15  1.77636e-15  -2.66454e-15  1.15463e-14  -2.66454e-15  -9.76996e-15  -1.24345e-14  -6.21725e-15  -7.99361e-15  -7.99361e-15  -1.77636e-15  -1.24345e-14  -3.55271e-15  4.44089e-15  -4.44089e-15  -9.76996e-15  -3.55271e-15  -6.21725e-15  -1.77636e-15  -2.66454e-15  -6.21725e-15  -5.32907e-15  -1.77636e-15  2.66454e-15  -8.88178e-16  -6.21725e-15  0.0  -1.06581e-14  -4.44089e-15  -7.99361e-15  3.55271e-15  -5.32907e-15  -1.77636e-15  6.18653e-9  7.57881e-9  2.66454e-15  -9.76996e-15  -2.66454e-15  1.77636e-15  2.08278e-13  5.63993e-14  2.86438e-13  2.59792e-13  1.42109e-14
