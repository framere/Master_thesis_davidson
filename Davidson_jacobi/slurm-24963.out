Running for Nlow = 16
read ../Davidson_algorithm/m_pp_He.dat
Davidson
iter=     1  Rnorm=  1.760e+00  size(V,2)=    16
iter=     2  Rnorm=  3.094e+00  size(V,2)=    32
iter=     3  Rnorm=  4.600e+00  size(V,2)=    48
iter=     4  Rnorm=  3.791e+00  size(V,2)=    64
iter=     5  Rnorm=  2.090e+00  size(V,2)=    80
iter=     6  Rnorm=  2.791e+00  size(V,2)=    96
iter=     7  Rnorm=  4.421e-01  size(V,2)=   112
iter=     8  Rnorm=  4.378e-02  size(V,2)=    32
iter=     9  Rnorm=  1.901e-02  size(V,2)=    48
iter=    10  Rnorm=  1.902e-02  size(V,2)=    64
iter=    11  Rnorm=  2.048e-02  size(V,2)=    80
iter=    12  Rnorm=  1.653e-02  size(V,2)=    96
iter=    13  Rnorm=  5.959e-03  size(V,2)=   112
converged!
  1.102894 seconds (2.68 k allocations: 184.544 MiB, 0.86% gc time)
Full diagonalization
1×16 adjoint(::Vector{Float64}) with eltype Float64:
 -6.13707  -5.13362  -5.12402  -5.11503  -4.34701  -4.3468  -4.34264  -4.3083  -4.1501  -0.991389  -0.985088  -0.97903  -0.761233  -0.643186  -0.64203  -0.639968
1×16 adjoint(::Vector{Float64}) with eltype Float64:
 1.77636e-15  8.88178e-15  0.0  4.44089e-15  7.99361e-15  3.55271e-15  -7.99361e-15  -9.76996e-15  3.55271e-15  -9.99201e-16  -1.22125e-15  2.9976e-15  3.26406e-14  8.07543e-8  5.84941e-5  2.81594e-9
read ../Davidson_algorithm/m_pp_hBN.dat
Davidson
iter=     1  Rnorm=  9.865e+00  size(V,2)=    16
iter=     2  Rnorm=  5.737e+00  size(V,2)=    32
iter=     3  Rnorm=  4.374e+00  size(V,2)=    48
iter=     4  Rnorm=  3.807e+00  size(V,2)=    64
iter=     5  Rnorm=  1.162e+00  size(V,2)=    80
iter=     6  Rnorm=  4.371e+00  size(V,2)=    96
iter=     7  Rnorm=  4.699e+00  size(V,2)=   112
iter=     8  Rnorm=  3.595e+00  size(V,2)=    32
iter=     9  Rnorm=  1.792e+00  size(V,2)=    48
iter=    10  Rnorm=  1.911e+00  size(V,2)=    64
iter=    11  Rnorm=  1.398e+00  size(V,2)=    80
iter=    12  Rnorm=  9.173e-01  size(V,2)=    96
iter=    13  Rnorm=  1.067e+00  size(V,2)=   112
iter=    14  Rnorm=  4.646e-01  size(V,2)=    32
iter=    15  Rnorm=  3.422e-01  size(V,2)=    48
iter=    16  Rnorm=  2.293e-01  size(V,2)=    64
iter=    17  Rnorm=  1.377e-01  size(V,2)=    80
iter=    18  Rnorm=  1.105e-01  size(V,2)=    96
iter=    19  Rnorm=  9.031e-02  size(V,2)=   112
iter=    20  Rnorm=  4.615e-02  size(V,2)=    32
iter=    21  Rnorm=  3.807e-02  size(V,2)=    48
iter=    22  Rnorm=  3.243e-02  size(V,2)=    64
iter=    23  Rnorm=  2.659e-02  size(V,2)=    80
iter=    24  Rnorm=  2.149e-02  size(V,2)=    96
iter=    25  Rnorm=  1.711e-02  size(V,2)=   112
iter=    26  Rnorm=  9.016e-03  size(V,2)=    32
converged!
  5.292424 seconds (5.50 k allocations: 569.413 MiB, 1.52% gc time)
Full diagonalization
1×16 adjoint(::Vector{Float64}) with eltype Float64:
 -8.32444  -8.32426  -8.32426  -8.324  -8.324  -8.32377  -8.24973  -8.24973  -8.24613  -8.14818  -8.14818  -7.96664  -7.96662  -7.90118  -7.90111  -7.90111
1×16 adjoint(::Vector{Float64}) with eltype Float64:
 2.03379e-7  5.47077e-8  4.95016e-8  2.07671e-8  2.36898e-8  1.49933e-7  4.65751e-8  3.155e-7  3.12367e-8  1.20221e-7  1.02673e-6  2.88209e-5  3.99793e-5  3.9016e-9  1.94189e-9  2.7672e-9
read ../Davidson_algorithm/m_pp_Si.dat
Davidson
iter=     1  Rnorm=  5.834e+00  size(V,2)=    16
iter=     2  Rnorm=  3.377e+00  size(V,2)=    32
iter=     3  Rnorm=  1.500e+00  size(V,2)=    48
iter=     4  Rnorm=  1.361e+00  size(V,2)=    64
iter=     5  Rnorm=  3.608e-01  size(V,2)=    80
iter=     6  Rnorm=  4.459e-01  size(V,2)=    96
iter=     7  Rnorm=  7.002e-02  size(V,2)=   112
iter=     8  Rnorm=  3.934e-02  size(V,2)=    32
iter=     9  Rnorm=  5.213e-01  size(V,2)=    48
iter=    10  Rnorm=  7.029e-01  size(V,2)=    64
iter=    11  Rnorm=  6.591e-01  size(V,2)=    80
iter=    12  Rnorm=  2.042e-01  size(V,2)=    96
iter=    13  Rnorm=  8.480e-02  size(V,2)=   112
iter=    14  Rnorm=  3.716e-02  size(V,2)=    32
iter=    15  Rnorm=  2.491e-02  size(V,2)=    48
iter=    16  Rnorm=  4.080e-01  size(V,2)=    64
iter=    17  Rnorm=  1.638e-01  size(V,2)=    80
iter=    18  Rnorm=  7.325e-02  size(V,2)=    96
iter=    19  Rnorm=  2.065e-01  size(V,2)=   112
iter=    20  Rnorm=  1.268e-01  size(V,2)=    32
iter=    21  Rnorm=  9.404e-02  size(V,2)=    48
iter=    22  Rnorm=  3.603e-01  size(V,2)=    64
iter=    23  Rnorm=  2.072e-01  size(V,2)=    80
iter=    24  Rnorm=  1.196e-01  size(V,2)=    96
iter=    25  Rnorm=  6.978e-02  size(V,2)=   112
iter=    26  Rnorm=  3.405e-02  size(V,2)=    32
iter=    27  Rnorm=  2.508e-02  size(V,2)=    48
iter=    28  Rnorm=  1.435e-02  size(V,2)=    64
iter=    29  Rnorm=  1.032e-02  size(V,2)=    80
iter=    30  Rnorm=  6.974e-03  size(V,2)=    96
converged!
  4.837980 seconds (6.37 k allocations: 597.903 MiB, 1.91% gc time)
Full diagonalization
1×16 adjoint(::Vector{Float64}) with eltype Float64:
 -5.82534  -5.82533  -5.81978  -5.81978  -5.76312  -5.76311  -5.68525  -5.68525  -5.66719  -5.66718  -5.62343  -5.55989  -5.55984  -5.54776  -5.50522  -5.50522
1×16 adjoint(::Vector{Float64}) with eltype Float64:
 -4.44089e-15  -2.66454e-15  5.77316e-14  5.41789e-14  -2.66454e-15  -3.55271e-15  7.10543e-15  -8.88178e-15  5.90639e-12  1.62501e-9  1.59872e-14  7.41233e-6  3.46162e-5  -1.77636e-15  1.36069e-12  7.13056e-11
Running for Nlow = 30
read ../Davidson_algorithm/m_pp_He.dat
Davidson
iter=     1  Rnorm=  2.749e+00  size(V,2)=    30
iter=     2  Rnorm=  4.687e+00  size(V,2)=    60
iter=     3  Rnorm=  3.577e+00  size(V,2)=    90
iter=     4  Rnorm=  2.881e+00  size(V,2)=   120
iter=     5  Rnorm=  6.853e-01  size(V,2)=   150
iter=     6  Rnorm=  4.897e-01  size(V,2)=   180
iter=     7  Rnorm=  9.200e-02  size(V,2)=   210
iter=     8  Rnorm=  2.778e-01  size(V,2)=    60
iter=     9  Rnorm=  2.594e-02  size(V,2)=    90
iter=    10  Rnorm=  1.215e-02  size(V,2)=   120
iter=    11  Rnorm=  2.963e-03  size(V,2)=   150
converged!
  1.589150 seconds (3.51 k allocations: 275.005 MiB, 5.01% gc time)
Full diagonalization
1×30 adjoint(::Vector{Float64}) with eltype Float64:
 -6.13707  -5.13362  -5.12402  -5.11503  -4.34701  -4.3468  -4.34264  -4.3083  -4.1501  -0.991389  -0.985088  -0.97903  -0.761233  -0.643186  -0.642088  -0.639968  -0.638299  -0.63581  -0.634056  -0.633173  -0.451494  -0.448879  -0.448599  -0.447421  -0.44405  -0.27962  -0.277336  -0.276493  -0.275259  -0.274942
1×30 adjoint(::Vector{Float64}) with eltype Float64:
 4.44089e-15  1.77636e-15  5.32907e-15  2.66454e-15  6.21725e-15  0.0  -7.10543e-15  -9.76996e-15  3.55271e-15  -2.22045e-16  7.77156e-16  -1.22125e-15  5.55112e-16  4.09339e-13  3.3466e-8  4.74398e-12  3.03071e-11  8.89089e-12  3.59701e-12  1.59425e-11  5.39679e-13  2.4531e-11  1.75804e-13  4.66727e-12  4.59094e-12  1.94582e-8  2.08643e-5  9.70584e-6  5.40964e-7  5.46062e-6
read ../Davidson_algorithm/m_pp_hBN.dat
Davidson
iter=     1  Rnorm=  1.294e+01  size(V,2)=    30
iter=     2  Rnorm=  1.004e+01  size(V,2)=    60
iter=     3  Rnorm=  6.812e+00  size(V,2)=    90
iter=     4  Rnorm=  5.567e+00  size(V,2)=   120
iter=     5  Rnorm=  6.298e+00  size(V,2)=   150
iter=     6  Rnorm=  3.056e+00  size(V,2)=   180
iter=     7  Rnorm=  3.984e+00  size(V,2)=   210
iter=     8  Rnorm=  2.655e+00  size(V,2)=    60
iter=     9  Rnorm=  2.240e+00  size(V,2)=    90
iter=    10  Rnorm=  1.755e+00  size(V,2)=   120
iter=    11  Rnorm=  1.211e+00  size(V,2)=   150
iter=    12  Rnorm=  9.145e-01  size(V,2)=   180
iter=    13  Rnorm=  3.822e-01  size(V,2)=   210
iter=    14  Rnorm=  1.387e-01  size(V,2)=    60
iter=    15  Rnorm=  7.014e-02  size(V,2)=    90
iter=    16  Rnorm=  4.360e-02  size(V,2)=   120
iter=    17  Rnorm=  2.849e-02  size(V,2)=   150
iter=    18  Rnorm=  9.305e-01  size(V,2)=   180
iter=    19  Rnorm=  5.137e-01  size(V,2)=   210
iter=    20  Rnorm=  1.617e-01  size(V,2)=    60
iter=    21  Rnorm=  6.258e-02  size(V,2)=    90
iter=    22  Rnorm=  3.072e-02  size(V,2)=   120
iter=    23  Rnorm=  1.918e-02  size(V,2)=   150
iter=    24  Rnorm=  9.292e-03  size(V,2)=   180
converged!
  9.055584 seconds (7.97 k allocations: 988.487 MiB, 1.96% gc time)
Full diagonalization
1×30 adjoint(::Vector{Float64}) with eltype Float64:
 -8.32444  -8.32426  -8.32426  -8.324  -8.324  -8.32377  -8.24973  -8.24973  -8.24613  -8.14818  -8.14818  -7.96666  -7.96666  -7.90118  -7.90111  -7.90111  -7.90104  -7.90104  -7.90097  -7.7688  -7.76864  -7.76864  -7.76859  -7.76859  -7.76843  -7.73875  -7.73834  -7.73834  -7.73767  -7.73767
1×30 adjoint(::Vector{Float64}) with eltype Float64:
 1.77636e-15  0.0  0.0  -1.77636e-15  5.32907e-15  1.06581e-14  2.66454e-14  3.01981e-14  5.32907e-15  1.05587e-11  3.18501e-12  4.09006e-12  2.26041e-12  -1.06581e-14  -2.66454e-15  -1.77636e-15  1.06581e-14  -1.77636e-15  -6.21725e-15  5.41789e-14  2.03393e-13  9.14824e-14  1.49747e-12  6.70575e-13  4.16556e-13  6.59361e-5  1.1415e-9  1.57667e-9  3.07524e-10  7.29714e-10
read ../Davidson_algorithm/m_pp_Si.dat
Davidson
iter=     1  Rnorm=  7.958e+00  size(V,2)=    30
iter=     2  Rnorm=  4.112e+00  size(V,2)=    60
iter=     3  Rnorm=  2.040e+00  size(V,2)=    90
iter=     4  Rnorm=  8.778e-01  size(V,2)=   120
iter=     5  Rnorm=  4.092e-01  size(V,2)=   150
iter=     6  Rnorm=  1.717e-01  size(V,2)=   180
iter=     7  Rnorm=  6.896e-01  size(V,2)=   210
iter=     8  Rnorm=  1.713e+00  size(V,2)=    60
iter=     9  Rnorm=  8.130e-01  size(V,2)=    90
iter=    10  Rnorm=  3.844e-01  size(V,2)=   120
iter=    11  Rnorm=  1.686e-01  size(V,2)=   150
iter=    12  Rnorm=  4.191e-02  size(V,2)=   180
iter=    13  Rnorm=  1.430e-02  size(V,2)=   210
iter=    14  Rnorm=  6.766e-03  size(V,2)=    60
converged!
  4.809715 seconds (4.54 k allocations: 503.884 MiB, 2.71% gc time)
Full diagonalization
1×30 adjoint(::Vector{Float64}) with eltype Float64:
 -5.82534  -5.82533  -5.81978  -5.81978  -5.76312  -5.76311  -5.68525  -5.68525  -5.66719  -5.66718  -5.62343  -5.55989  -5.55987  -5.54776  -5.50522  -5.50522  -5.47729  -5.47729  -5.44592  -5.42479  -5.42478  -5.41582  -5.41582  -5.41577  -5.40684  -5.40682  -5.29334  -5.28172  -5.28172  -5.2816
1×30 adjoint(::Vector{Float64}) with eltype Float64:
 1.32102e-10  9.69758e-11  2.54996e-12  2.56506e-12  2.65242e-10  2.65539e-10  7.01661e-14  1.18128e-13  4.35103e-8  4.28821e-8  4.08562e-14  1.21983e-5  7.02833e-6  8.88178e-15  6.37712e-13  6.46594e-13  3.01448e-12  3.00648e-12  8.88178e-16  1.50584e-7  1.18128e-8  4.01457e-13  2.96385e-12  3.05178e-12  5.41404e-10  2.85215e-10  8.88178e-15  0.000670366  0.000669914  0.00012273
Running for Nlow = 60
read ../Davidson_algorithm/m_pp_He.dat
Davidson
iter=     1  Rnorm=  3.599e+00  size(V,2)=    60
iter=     2  Rnorm=  3.627e+00  size(V,2)=   120
iter=     3  Rnorm=  3.191e+00  size(V,2)=   180
iter=     4  Rnorm=  2.362e+00  size(V,2)=   240
iter=     5  Rnorm=  6.546e-01  size(V,2)=   300
iter=     6  Rnorm=  3.954e-01  size(V,2)=   360
iter=     7  Rnorm=  1.917e-01  size(V,2)=   420
iter=     8  Rnorm=  1.111e-01  size(V,2)=   120
iter=     9  Rnorm=  6.760e-02  size(V,2)=   180
iter=    10  Rnorm=  6.326e-02  size(V,2)=   240
iter=    11  Rnorm=  3.377e-02  size(V,2)=   300
iter=    12  Rnorm=  9.508e-03  size(V,2)=   360
converged!
  4.747242 seconds (6.83 k allocations: 633.408 MiB, 5.22% gc time)
Full diagonalization
1×60 adjoint(::Vector{Float64}) with eltype Float64:
 -6.13707  -5.13362  -5.12402  -5.11503  -4.34701  -4.3468  -4.34264  -4.3083  -4.1501  -0.991389  -0.985088  -0.97903  -0.761233  -0.643186  -0.642088  -0.639968  -0.638299  -0.63581  -0.634056  -0.633173  -0.451494  -0.448879  -0.448599  -0.447421  -0.44405  -0.27962  -0.277356  -0.276502  -0.275259  -0.274948  -0.274906  -0.27213  -0.272045  -0.271784  -0.171543  -0.16928  -0.167529  -0.129366  -0.12723  -0.127087  -0.126893  -0.126267  -0.124999  -0.12487  -0.124637  -0.123679  -0.123343  -0.123303  -0.123025  -0.122752  -0.122625  -0.122335  -0.12175  -0.121627  -0.121583  -0.109958  -0.0686475  -0.0673273  -0.0669081  -0.0666781
1×60 adjoint(::Vector{Float64}) with eltype Float64:
 5.32907e-15  0.0  5.32907e-15  7.99361e-15  7.99361e-15  3.55271e-15  -3.55271e-15  -6.21725e-15  5.32907e-15  -1.44329e-15  -1.11022e-16  -1.22125e-15  -1.77636e-15  4.44089e-16  -6.66134e-16  -2.22045e-16  -6.66134e-16  -3.33067e-16  5.55112e-16  -2.22045e-16  7.77156e-16  0.0  -2.77556e-16  3.33067e-16  1.66533e-16  9.34253e-14  1.01025e-12  5.05562e-12  1.40564e-11  1.55274e-10  7.27801e-11  2.97024e-11  6.63231e-11  2.54741e-13  4.20273e-9  1.74739e-8  6.00314e-10  3.14539e-7  9.82359e-7  1.43465e-7  5.96518e-5  8.80598e-7  5.94939e-7  4.78419e-6  0.000133789  8.33163e-7  2.09826e-6  9.1151e-7  4.491e-5  0.000235968  1.80479e-6  3.57698e-7  2.87887e-7  3.58753e-7  6.38919e-7  5.76587e-7  0.000174129  4.93383e-5  0.000268332  0.000282324
read ../Davidson_algorithm/m_pp_hBN.dat
Davidson
iter=     1  Rnorm=  1.598e+01  size(V,2)=    60
iter=     2  Rnorm=  1.292e+01  size(V,2)=   120
iter=     3  Rnorm=  1.074e+01  size(V,2)=   180
iter=     4  Rnorm=  8.370e+00  size(V,2)=   240
iter=     5  Rnorm=  5.481e+00  size(V,2)=   300
iter=     6  Rnorm=  5.727e+00  size(V,2)=   360
iter=     7  Rnorm=  3.016e+00  size(V,2)=   420
iter=     8  Rnorm=  2.753e+00  size(V,2)=   120
iter=     9  Rnorm=  1.157e+00  size(V,2)=   180
iter=    10  Rnorm=  2.625e+00  size(V,2)=   240
iter=    11  Rnorm=  1.725e+00  size(V,2)=   300
iter=    12  Rnorm=  6.256e-01  size(V,2)=   360
iter=    13  Rnorm=  1.409e-01  size(V,2)=   420
iter=    14  Rnorm=  3.709e-02  size(V,2)=   120
iter=    15  Rnorm=  1.669e+00  size(V,2)=   180
iter=    16  Rnorm=  5.366e-01  size(V,2)=   240
iter=    17  Rnorm=  1.551e-01  size(V,2)=   300
iter=    18  Rnorm=  3.098e-02  size(V,2)=   360
iter=    19  Rnorm=  5.902e-03  size(V,2)=   420
converged!
 16.797018 seconds (11.13 k allocations: 1.564 GiB, 2.24% gc time)
Full diagonalization
1×60 adjoint(::Vector{Float64}) with eltype Float64:
 -8.32444  -8.32426  -8.32426  -8.324  -8.324  -8.32377  -8.24973  -8.24973  -8.24613  -8.14818  -8.14818  -7.96666  -7.96666  -7.90118  -7.90111  -7.90111  -7.90104  -7.90104  -7.90097  -7.7688  -7.76864  -7.76864  -7.76859  -7.76859  -7.76843  -7.73882  -7.73834  -7.73834  -7.73767  -7.73767  -7.73707  -7.40376  -7.40376  -7.23998  -7.18075  -7.18074  -7.05367  -7.05367  -6.90062  -6.90051  -6.90051  -6.90029  -6.90029  -6.90015  -6.81248  -6.81248  -6.75086  -6.75067  -6.75067  -6.74982  -6.74982  -6.74978  -6.71785  -6.49485  -6.49485  -6.35367  -6.35367  -6.27374  -6.2737  -5.86353
1×60 adjoint(::Vector{Float64}) with eltype Float64:
 8.88178e-15  -5.32907e-15  0.0  -1.77636e-15  5.32907e-15  1.06581e-14  1.77636e-14  -3.55271e-15  -3.55271e-15  0.0  -8.88178e-15  5.32907e-15  1.24345e-14  -8.88178e-16  -7.10543e-15  -2.66454e-15  8.88178e-16  5.32907e-15  -7.99361e-15  -8.88178e-15  1.15463e-14  5.32907e-15  2.66454e-15  1.77636e-15  1.06581e-14  4.46141e-11  1.77636e-15  8.88178e-16  -4.44089e-15  8.88178e-15  7.70495e-12  2.66454e-15  -2.66454e-15  -1.59872e-14  -3.55271e-15  2.12275e-12  -6.21725e-15  -4.44089e-15  3.3224e-6  3.3368e-11  5.46629e-11  1.12133e-11  1.82698e-12  3.36036e-6  6.21903e-12  1.15099e-11  -5.32907e-15  1.77636e-15  -5.32907e-15  3.55271e-15  1.06581e-14  -3.55271e-15  2.66454e-15  -2.66454e-15  1.86517e-14  -5.32907e-15  8.88178e-16  3.67706e-13  2.66421e-9  3.28626e-14
read ../Davidson_algorithm/m_pp_Si.dat
Davidson
iter=     1  Rnorm=  1.071e+01  size(V,2)=    60
iter=     2  Rnorm=  4.610e+00  size(V,2)=   120
iter=     3  Rnorm=  1.336e+00  size(V,2)=   180
iter=     4  Rnorm=  5.725e-01  size(V,2)=   240
iter=     5  Rnorm=  6.303e-01  size(V,2)=   300
iter=     6  Rnorm=  1.095e+00  size(V,2)=   360
iter=     7  Rnorm=  4.772e-01  size(V,2)=   420
iter=     8  Rnorm=  1.505e-01  size(V,2)=   120
iter=     9  Rnorm=  9.104e-01  size(V,2)=   180
iter=    10  Rnorm=  3.438e-01  size(V,2)=   240
iter=    11  Rnorm=  1.257e-01  size(V,2)=   300
iter=    12  Rnorm=  2.846e-01  size(V,2)=   360
iter=    13  Rnorm=  8.227e-02  size(V,2)=   420
iter=    14  Rnorm=  3.601e-02  size(V,2)=   120
iter=    15  Rnorm=  1.608e-02  size(V,2)=   180
iter=    16  Rnorm=  9.941e-03  size(V,2)=   240
converged!
 10.925081 seconds (9.29 k allocations: 1.131 GiB, 3.33% gc time)
Full diagonalization
1×60 adjoint(::Vector{Float64}) with eltype Float64:
 -5.82534  -5.82533  -5.81978  -5.81978  -5.76312  -5.76311  -5.68525  -5.68525  -5.66719  -5.66718  -5.62343  -5.5599  -5.55988  -5.54776  -5.50522  -5.50522  -5.47729  -5.47729  -5.44592  -5.42479  -5.42478  -5.41582  -5.41582  -5.41577  -5.40684  -5.40682  -5.29334  -5.28239  -5.28239  -5.28172  -5.28172  -5.2816  -5.28159  -5.15369  -5.12588  -5.12584  -5.09992  -5.09987  -5.09912  -5.09911  -5.07709  -5.07706  -5.04793  -5.04793  -5.01696  -5.01696  -4.99253  -4.99251  -4.99064  -4.99064  -4.97092  -4.97091  -4.95772  -4.95727  -4.95726  -4.95271  -4.95269  -4.87717  -4.87717  -4.81239
1×60 adjoint(::Vector{Float64}) with eltype Float64:
 2.66454e-15  1.15463e-14  1.06581e-14  -1.24345e-14  0.0  3.55271e-15  1.42109e-14  1.42109e-14  5.32907e-15  4.44089e-15  5.32907e-15  -7.99361e-15  1.77636e-15  5.32907e-15  7.10543e-15  0.0  6.21725e-15  -2.66454e-15  -6.21725e-15  3.55271e-15  -1.77636e-15  7.99361e-15  8.88178e-16  -1.77636e-15  5.32907e-15  -3.55271e-15  7.10543e-15  2.66454e-15  3.55271e-15  1.24345e-14  1.24345e-14  1.77636e-15  -2.66454e-15  -8.88178e-15  1.04272e-12  1.27631e-12  1.78879e-12  5.53335e-13  8.88178e-15  1.86517e-14  -7.10543e-15  1.5099e-14  4.56443e-9  1.1061e-8  7.37188e-14  6.92779e-14  2.13163e-14  1.33227e-14  -6.21725e-15  4.44089e-15  9.14824e-13  1.68754e-13  8.88178e-16  3.52771e-8  6.37961e-8  -2.66454e-15  -5.32907e-15  2.06946e-12  1.75149e-12  3.99043e-5
Running for Nlow = 90
read ../Davidson_algorithm/m_pp_He.dat
Davidson
iter=     1  Rnorm=  4.039e+00  size(V,2)=    90
iter=     2  Rnorm=  4.074e+00  size(V,2)=   180
iter=     3  Rnorm=  3.377e+00  size(V,2)=   270
iter=     4  Rnorm=  7.983e-01  size(V,2)=   360
iter=     5  Rnorm=  2.270e-01  size(V,2)=   450
iter=     6  Rnorm=  1.565e-01  size(V,2)=   540
iter=     7  Rnorm=  1.064e-01  size(V,2)=   630
iter=     8  Rnorm=  6.996e-02  size(V,2)=   180
iter=     9  Rnorm=  4.781e-02  size(V,2)=   270
iter=    10  Rnorm=  3.563e-02  size(V,2)=   360
iter=    11  Rnorm=  2.500e-02  size(V,2)=   450
iter=    12  Rnorm=  1.622e-02  size(V,2)=   540
iter=    13  Rnorm=  1.115e-02  size(V,2)=   630
iter=    14  Rnorm=  9.941e-03  size(V,2)=   180
converged!
  8.861070 seconds (11.58 k allocations: 1.124 GiB, 3.99% gc time)
Full diagonalization
1×90 adjoint(::Vector{Float64}) with eltype Float64:
 -6.13707  -5.13362  -5.12402  -5.11503  -4.34701  -4.3468  -4.34264  -4.3083  -4.1501  -0.991389  -0.985088  -0.97903  -0.761233  -0.643186  -0.642088  -0.639968  -0.638299  -0.63581  -0.634056  -0.633173  -0.451494  -0.448879  -0.448599  -0.447421  -0.44405  -0.27962  -0.277356  -0.276502  -0.275259  -0.274948  -0.274906  -0.27213  -0.272045  -0.271784  -0.171543  -0.16928  -0.167529  -0.129366  -0.127231  -0.127088  -0.126952  -0.126268  -0.124999  -0.124875  -0.12477  -0.12368  -0.123345  -0.123304  -0.12307  -0.122988  -0.122626  -0.122336  -0.12175  -0.121628  -0.121584  -0.109959  -0.0688197  -0.0673757  -0.0671763  -0.0669603  -0.0668819  -0.0605288  -0.0595286  -0.0590258  -0.0589648  -0.0587145  -0.0583623  -0.0582488  -0.0579623  -0.0579441  -0.0575719  -0.057263  -0.0569995  -0.0565756  -0.0516504  -0.0509299  -0.0506404  -0.0502729  -0.0502032  -0.0502014  -0.0494356  -0.0493849  -0.0493288  -0.0292816  -0.0289418  -0.0282669  -0.0279555  -0.0278155  -0.0275707  -0.0274325
1×90 adjoint(::Vector{Float64}) with eltype Float64:
 1.77636e-15  1.77636e-15  5.32907e-15  7.99361e-15  9.76996e-15  0.0  -7.10543e-15  -7.99361e-15  5.32907e-15  -1.88738e-15  7.77156e-16  -7.77156e-16  -9.99201e-16  1.11022e-16  3.33067e-16  2.22045e-16  3.33067e-16  2.22045e-16  8.88178e-16  -4.44089e-16  5.55112e-16  4.44089e-16  8.32667e-16  -5.55112e-16  1.66533e-16  3.88578e-16  5.55112e-17  -2.22045e-16  -3.88578e-16  1.11022e-15  0.0  2.22045e-16  1.66533e-16  4.996e-16  4.996e-16  5.27356e-16  -8.32667e-17  1.26676e-13  2.1444e-13  5.53446e-14  3.05245e-12  1.00309e-13  7.96349e-13  3.02022e-12  3.046e-11  4.40536e-13  5.47017e-12  8.05883e-14  1.50901e-11  4.04266e-12  4.38942e-12  5.24719e-14  2.23907e-12  7.83124e-14  6.86479e-13  1.02528e-12  1.95571e-6  9.90281e-7  1.02344e-7  9.50071e-8  4.79514e-8  6.23192e-7  1.01907e-6  3.17823e-7  9.01648e-8  4.33475e-8  2.73343e-7  4.69693e-8  9.20249e-7  2.90086e-7  9.93416e-8  1.47708e-7  3.3733e-7  6.11579e-7  3.68144e-5  3.14135e-6  7.24679e-6  1.18721e-5  1.14923e-5  5.6437e-6  3.69394e-6  1.07515e-5  3.39759e-5  0.000478033  0.000388848  0.000710732  0.00049791  0.000593285  0.000790642  0.000846711
read ../Davidson_algorithm/m_pp_hBN.dat
Davidson
iter=     1  Rnorm=  1.878e+01  size(V,2)=    90
iter=     2  Rnorm=  1.505e+01  size(V,2)=   180
iter=     3  Rnorm=  1.120e+01  size(V,2)=   270
iter=     4  Rnorm=  6.691e+00  size(V,2)=   360
iter=     5  Rnorm=  2.717e+00  size(V,2)=   450
iter=     6  Rnorm=  2.006e+00  size(V,2)=   540
iter=     7  Rnorm=  5.447e+00  size(V,2)=   630
iter=     8  Rnorm=  5.117e+00  size(V,2)=   180
iter=     9  Rnorm=  2.719e+00  size(V,2)=   270
iter=    10  Rnorm=  1.589e+00  size(V,2)=   360
iter=    11  Rnorm=  4.218e-01  size(V,2)=   450
iter=    12  Rnorm=  1.087e-01  size(V,2)=   540
iter=    13  Rnorm=  2.919e-02  size(V,2)=   630
iter=    14  Rnorm=  1.068e-02  size(V,2)=   180
iter=    15  Rnorm=  4.828e-03  size(V,2)=   270
converged!
 19.342951 seconds (12.47 k allocations: 1.777 GiB, 2.45% gc time)
Full diagonalization
1×90 adjoint(::Vector{Float64}) with eltype Float64:
 -8.32444  -8.32426  -8.32426  -8.324  -8.324  -8.32377  -8.24973  -8.24973  -8.24613  -8.14818  -8.14818  -7.96666  -7.96666  -7.90118  -7.90111  -7.90111  -7.90104  -7.90104  -7.90097  -7.7688  -7.76864  -7.76864  -7.76859  -7.76859  -7.76843  -7.73882  -7.73834  -7.73834  -7.73767  -7.73767  -7.73707  -7.40376  -7.40376  -7.23998  -7.18075  -7.18074  -7.05367  -7.05367  -6.90062  -6.90051  -6.90051  -6.90029  -6.90029  -6.90015  -6.81248  -6.81248  -6.75086  -6.75067  -6.75067  -6.74982  -6.74982  -6.74978  -6.71785  -6.49485  -6.49485  -6.35367  -6.35367  -6.27374  -6.2737  -5.86353  -5.86325  -5.86325  -5.86272  -5.86272  -5.86238  -5.82949  -5.82939  -5.82939  -5.8293  -5.8293  -5.82922  -5.70369  -5.7036  -5.7036  -5.7031  -5.7031  -5.70301  -4.83279  -4.83279  -4.69283  -4.69281  -4.29784  -4.29783  -4.06392  -3.98963  -3.98955  -3.98955  -3.98935  -3.98935  -3.98927
1×90 adjoint(::Vector{Float64}) with eltype Float64:
 8.88178e-15  -3.55271e-15  -7.10543e-15  5.32907e-15  0.0  1.77636e-14  1.77636e-14  -7.10543e-15  -1.77636e-15  0.0  -1.42109e-14  -2.66454e-15  -8.88178e-16  2.66454e-15  -4.44089e-15  -8.88178e-16  8.88178e-16  -7.10543e-15  -1.24345e-14  -1.15463e-14  3.55271e-15  -5.32907e-15  2.66454e-15  1.24345e-14  -5.32907e-15  8.88178e-16  1.33227e-14  -5.32907e-15  -2.66454e-15  8.88178e-15  -8.88178e-16  -8.88178e-16  1.77636e-15  -7.99361e-15  3.55271e-15  -2.66454e-15  -6.21725e-15  -6.21725e-15  2.3674e-10  2.69837e-11  3.67857e-11  3.14193e-11  2.91767e-11  4.06073e-9  1.98934e-11  4.46239e-11  -4.44089e-15  -8.88178e-16  -5.32907e-15  5.32907e-15  1.77636e-15  2.66454e-15  1.77636e-15  -7.99361e-15  -1.77636e-15  7.10543e-15  1.86517e-14  -1.15463e-14  1.77636e-15  7.99361e-15  1.77636e-15  -4.44089e-15  5.32907e-15  -5.32907e-15  8.88178e-16  -8.88178e-16  8.88178e-16  -7.99361e-15  -1.77636e-15  2.66454e-15  -2.66454e-15  4.52971e-14  5.32907e-15  -7.99361e-15  1.77636e-15  -4.44089e-15  2.57572e-14  5.13367e-13  3.67439e-12  8.33219e-7  8.88318e-6  5.30725e-10  2.10227e-10  2.0722e-9  2.70138e-8  2.86805e-8  1.97626e-7  7.03703e-8  5.00808e-7  5.87929e-9
read ../Davidson_algorithm/m_pp_Si.dat
Davidson
iter=     1  Rnorm=  1.231e+01  size(V,2)=    90
iter=     2  Rnorm=  5.158e+00  size(V,2)=   180
iter=     3  Rnorm=  1.582e+00  size(V,2)=   270
iter=     4  Rnorm=  1.222e+00  size(V,2)=   360
iter=     5  Rnorm=  6.822e-01  size(V,2)=   450
iter=     6  Rnorm=  4.170e-01  size(V,2)=   540
iter=     7  Rnorm=  1.034e-01  size(V,2)=   630
iter=     8  Rnorm=  2.995e-02  size(V,2)=   180
iter=     9  Rnorm=  1.572e-02  size(V,2)=   270
iter=    10  Rnorm=  8.536e-03  size(V,2)=   360
converged!
  9.893108 seconds (8.04 k allocations: 1.011 GiB, 2.78% gc time)
Full diagonalization
1×90 adjoint(::Vector{Float64}) with eltype Float64:
 -5.82534  -5.82533  -5.81978  -5.81978  -5.76312  -5.76311  -5.68525  -5.68525  -5.66719  -5.66718  -5.62343  -5.5599  -5.55988  -5.54776  -5.50522  -5.50522  -5.47729  -5.47729  -5.44592  -5.42479  -5.42478  -5.41582  -5.41582  -5.41577  -5.40684  -5.40682  -5.29334  -5.28239  -5.28239  -5.28172  -5.28172  -5.2816  -5.28159  -5.15369  -5.12588  -5.12584  -5.09992  -5.09987  -5.09912  -5.09911  -5.07709  -5.07706  -5.04793  -5.04793  -5.01696  -5.01696  -4.99253  -4.99251  -4.99064  -4.99064  -4.97092  -4.97091  -4.95772  -4.95727  -4.95726  -4.95271  -4.95269  -4.87717  -4.87717  -4.81243  -4.81242  -4.7603  -4.7603  -4.7177  -4.7177  -4.6979  -4.69789  -4.6968  -4.6968  -4.64918  -4.64916  -4.56318  -4.56318  -4.51241  -4.5124  -4.48964  -4.48521  -4.48521  -4.45282  -4.45282  -4.39068  -4.39068  -4.38897  -4.35832  -4.35832  -4.34383  -4.34381  -4.34126  -4.20939  -4.20937
1×90 adjoint(::Vector{Float64}) with eltype Float64:
 -7.99361e-15  8.88178e-15  2.39808e-14  8.88178e-15  1.33227e-14  2.39808e-14  2.66454e-14  1.24345e-14  5.32907e-15  5.32907e-15  2.30926e-14  3.55271e-15  1.06581e-14  2.66454e-15  2.6823e-13  3.01981e-13  1.62181e-12  1.57474e-12  -6.21725e-15  2.30926e-13  2.35367e-13  5.32907e-15  7.99361e-15  5.32907e-15  4.44089e-15  1.15463e-14  9.76996e-15  2.75335e-14  4.44089e-14  6.92779e-14  9.76996e-14  1.28786e-12  7.8888e-12  3.74811e-13  1.93623e-13  1.72307e-13  5.64526e-12  4.10694e-12  4.14593e-11  6.11635e-11  3.51719e-13  3.71259e-13  3.65041e-13  3.32179e-13  9.14824e-14  9.14824e-14  4.42313e-12  4.04565e-12  2.05436e-12  6.95444e-13  2.50466e-13  2.80664e-13  9.58345e-13  2.70006e-13  2.5846e-13  2.11564e-12  2.10854e-12  1.60334e-11  1.79492e-11  7.59623e-11  7.29896e-11  1.11442e-10  1.01818e-10  7.19089e-10  8.00964e-10  6.19949e-13  5.51559e-13  1.85334e-10  1.9211e-10  1.4138e-11  1.417e-11  2.20632e-11  2.19424e-11  7.3972e-9  7.87787e-9  1.59872e-14  5.01236e-10  2.12758e-10  3.64482e-11  3.45395e-11  6.75833e-11  7.31495e-11  -8.88178e-16  8.8908e-6  5.81881e-6  2.33397e-9  2.10291e-9  1.79754e-5  3.93549e-10  5.59623e-11
